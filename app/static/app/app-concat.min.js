"use strict";var occupancyApp=angular.module("occupancyApp",["ngRoute","pikaday","chart.js","ngFileUpload"]);occupancyApp.controller("TopbarController",["$scope","Authentication","Session",function(e,t,o){o.user?e.user=o.user:(console.log("checking auth"),t.getLoggedInUser().then(function(t){o.user=t,e.user=t}))}]),occupancyApp.controller("DashboardController",["$scope","$http","Authentication","Session","RoomOccupancy","Permissions",function(e,t,o,n,r,s){n.user?e.hasPermission=s.hasPermission:o.getLoggedInUser().then(function(t){n.user=t,e.hasPermission=s.hasPermission}),r.getLeastUsed().then(function(t){t.length?e.leastUsed=t:e.message="There are no rooms to display"}),r.getMostUsed().then(function(t){t.length?e.mostUsed=t:e.message="There are no rooms to display"})}]),occupancyApp.controller("RoomsController",["$scope","$http","$routeParams","Modules","Authentication","Session","DataManagement","Permissions","RoomOccupancy",function(e,t,o,n,r,s,a,i,u){s.user?e.hasPermission=i.hasPermission:r.getLoggedInUser().then(function(t){s.user=t,e.hasPermission=i.hasPermission}),u.getRooms().then(function(t){e.rooms=t}),e.formData={},o.room&&(e.formData.room=o.room),e.submit=function(){if(e.formData.room&&e.formData.date&&e.formData.type){var o="/api/room/occupancy/"+e.formData.room+"/"+e.formData.date.split(" ").join("%20")+"/"+e.formData.type;t.get(o).then(function(t){if(t.data.results.length>0){var o=a.organiseData(t.data.results,e.formData.type);e.results=!0;var r=o.data.map(function(e){return a.convertToPercent(e)});e.data=[r],e.series=["% occupied"],console.log(o.hours[0][0]),e.score=a.convertToPercent(o.hours[0][0].room_occupancy_score),e.labels=o.data.map(function(e,t){return"Hour "+t}),e.options={responsive:!0},e.onClick=function(e,t){console.log(e,t)},e.room=e.formData.room,e.date=e.formData.date,e.type=e.formData.type,n.getModulesByRoom(e.formData.room).then(function(t){t.results.length>0&&(e.modules=t.results,console.log(t.results.length))})}else e.results=!1,e.message="No data available for "+e.formData.room+" on "+e.formData.date;e.bannerType="hidden"},function(e){})}else{var r="Please ensure these fields have been filled: ";e.formData.type||(r+="type (binary or continuous) ,"),e.formData.room||(r+="room ,"),e.formData.date||(r+="a valid date "),e.bannerType="error",e.error=r}}}]),occupancyApp.controller("ModulesController",["$scope","$http","$routeParams","Authentication","Session","DataManagement","Permissions","Modules",function(e,t,o,n,r,s,a,i){r.user?e.hasPermission=a.hasPermission:n.getLoggedInUser().then(function(t){r.user=t,e.hasPermission=a.hasPermission}),i.getModulesList().then(function(t){e.modules=t}),e.formData={},e.submit=function(){if(e.formData.moduleSearch){var o="/api/module/rooms-used/"+e.formData.moduleSearch;t.get(o).then(function(t){t.data.results.length>0?e.results=t.data.results:(e.results=!1,e.message="No data available for "+e.formData.moduleSearch)},function(e){})}},o.module&&(e.formData.moduleSearch=o.module,e.submit())}]),occupancyApp.controller("UploadController",["$scope","Upload","$timeout","Permissions","Session","Authentication",function(e,t,o,n,r,s){r.user?e.hasPermission=n.hasPermission:s.getLoggedInUser().then(function(t){r.user=t,e.hasPermission=n.hasPermission}),e.$watch("files",function(){e.upload(e.files)}),e.$watch("file",function(){null!=e.file&&(e.files=[e.file])}),e.log="",e.upload=function(){var n=e.files;if(n&&n.length)for(var r=0;r<n.length;r++){var s=n[r];s.$error||("wifi"==e.filetype||"truth"==e.filetype||"timetable"==e.filetype?(console.log(e.filetype),t.upload({url:"/api/data/upload/"+e.filetype,data:{file:s}}).then(function(t){o(function(){e.log="file: "+t.config.data.file.name+", Response: "+JSON.stringify(t.data)+"\n"+e.log}),e.type="success",e.message="File upload successful"},function(t){console.log("error"),e.type="error",e.message="Invalid file type"},function(t){var o=parseInt(100*t.loaded/t.total);e.log="progress: "+o+"% "+t.config.data.file.name+"\n"+e.log,e.progress=o})):(e.type="error",e.error="Please Select an appropriate upload type"))}}}]),occupancyApp.controller("AuthController",["$scope","$location","Authentication","Session",function(e,t,o,n){e.error="",e.submit=function(){o.loginUser(e.email,e.password).then(function(o){o.error?e.error=o.error:(o.loggedIn=!0,n.user=o,console.log(n.user),t.path("/dashboard"))})}}]),occupancyApp.controller("RegisterController",["$scope","Authentication","Permissions","Session",function(e,t,o,n){o.getPossiblePermissions().then(function(t){e.permissions=t}),n.user?e.hasPermission=o.hasPermission:t.getLoggedInUser().then(function(t){n.user=t,e.hasPermission=o.hasPermission}),e.submit=function(){t.registerUser(e.email,e.permission).then(function(t){t.data.success?(e.type="success",e.message=t.data.success,e.email=""):(e.type="error",e.message=t.data.error)},function(t){e.type="error",e.message=data.data.error})}}]),occupancyApp.controller("LogoutController",["$scope","$location","Authentication","Session",function(e,t,o,n){o.logoutUser().then(function(e){n.user=null,t.path("/login")})}]),occupancyApp.filter("round2decimals",function(){return function(e){return Math.round(100*e)/100}}),occupancyApp.service("Authentication",["$http",function(e,t){return{getLoggedInUser:function(){return e({method:"GET",url:"/api/auth/current-user"}).then(function(e){var t=this.currentUser=e.data;return t},function(e){return JSON.parse(e)})},registerUser:function(t,o){return e({method:"POST",data:{email:t,permission:o},url:"/api/auth/register"}).then(function(e){return e},function(e){return e})},loginUser:function(t,o){return e({method:"POST",data:{email:t,password:o},url:"/api/auth/login"}).then(function(e){return this.user=e.data,e.data},function(e){return e.data})},logoutUser:function(){return e({method:"GET",url:"/api/auth/logout"}).then(function(e){return!0},function(e){return!1})}}}]),occupancyApp.service("Session",[function(){this.user=null,this.isUserLoggedIn=function(){return!!this.user&&this.user}}]),occupancyApp.service("Permissions",["$http","Session","Authentication",function(e,t,o){return{hasPermission:function(e,o){if(t.user){if("[object Array]"!==Object.prototype.toString.call(e))return t.user.permissions[e];for(var n=0;n<e.length;n++)if("AND"==o){if(!t.user.permissions[n])return!1}else if("OR"==o&&t.user.permissions[n])return!0}return!1},getPossiblePermissions:function(){return e({method:"GET",url:"/api/auth/permissions/get-all"}).then(function(e){return e.data},function(e){return e.data})}}}]),occupancyApp.service("DataManagement",[function(){return{organiseData:function(e,t){var o=[];e.map(function(e,t){var n=1*e.counts_time.substring(11,13);o[n]?o[n].push(e):o[n]=[e]});var n=(o[0][0].room_capacity,o.map(function(e){var o=e.reduce(function(e,o){return"binary"==t?e||o.counts_predicted_is_occupied:e+o.counts_predicted/o.room_capacity/1},0);return"binary"==t?o:o/e.length}));return returnResults={data:n,hours:o},returnResults},convertToPercent:function(e){return Math.round(1e4*e)/100}}}]),occupancyApp.service("RoomOccupancy",["$http",function(e,t){return{getRooms:function(){return e({method:"GET",url:"/api/rooms/list"}).then(function(e){return e.data},function(e){return e.data})},getLeastUsed:function(){return e({method:"GET",url:"/api/rooms/usage/least"}).then(function(e){return e.data},function(e){return e.data})},getMostUsed:function(){return e({method:"GET",url:"/api/rooms/usage/most"}).then(function(e){return e.data},function(e){return e.data})}}}]),occupancyApp.service("Modules",["$http","Session","Authentication",function(e,t,o){return{getModulesList:function(){return e({method:"GET",url:"/api/module/list"}).then(function(e){return e.data},function(e){return e.data})},getModulesByRoom:function(t){return e({method:"GET",url:"/api/module/room/"+t}).then(function(e){return console.log(e),e.data},function(e){return e.data})}}}]),occupancyApp.config(["$locationProvider","$routeProvider","$logProvider","ChartJsProvider",function(e,t,o,n){o.debugEnabled(!0),t.when("/",{templateUrl:"/static/app/templates/login.html",controller:"AuthController",resolve:{check:function(e,t,o,n){t.user?n.path("/dashboard"):o.getLoggedInUser().then(function(e){e?n.path("/dashboard"):n.path("/login")})}}}).when("/dashboard",{templateUrl:"/static/app/templates/home.html",resolve:{check:function(e,t,o,n){return!!t.user||void o.getLoggedInUser().then(function(e){return!!e||void n.path("/login")})}},controller:"DashboardController"}).when("/rooms",{templateUrl:"/static/app/templates/rooms.html",resolve:{check:function(e,t,o,n){return!!t.user||void o.getLoggedInUser().then(function(e){return!!e||void n.path("/login")})}},controller:"RoomsController"}).when("/rooms/:room",{templateUrl:"/static/app/templates/rooms.html",resolve:{check:function(e,t,o,n){return!!t.user||void o.getLoggedInUser().then(function(e){return!!e||void n.path("/login")})}},controller:"RoomsController"}).when("/modules",{templateUrl:"/static/app/templates/modules.html",resolve:{check:function(e,t,o,n){return!!t.user||void o.getLoggedInUser().then(function(e){return!!e||void n.path("/login")})}},controller:"ModulesController"}).when("/modules/:module",{templateUrl:"/static/app/templates/modules.html",resolve:{check:function(e,t,o,n){return!!t.user||void o.getLoggedInUser().then(function(e){return!!e||void n.path("/login")})}},controller:"ModulesController"}).when("/login",{templateUrl:"/static/app/templates/login.html",controller:"AuthController"}).when("/upload",{templateUrl:"/static/app/templates/upload.html",resolve:{check:function(e,t,o,n){return t.user?!!e.hasPermission(["add-truth","add-logs","add-class"],"OR"):void o.getLoggedInUser().then(function(t){return!!e.hasPermission(["add-truth","add-logs","add-class"],"OR")})}},controller:"UploadController"}).when("/add/user",{templateUrl:"/static/app/templates/add-user.html",resolve:{check:function(e,t,o,n){return t.user?!!e.hasPermission("add-user"):void o.getLoggedInUser().then(function(t){return!!e.hasPermission("add-user")})}},controller:"RegisterController"}).when("/add/ground-truth",{templateUrl:"/static/app/templates/add-truth.html",resolve:{check:function(e,t,o,n){return t.user?!!e.hasPermission("add-truth"):void o.getLoggedInUser().then(function(t){return!!e.hasPermission("add-truth")})}}}).when("/add/class",{templateUrl:"/static/app/templates/add-class.html",resolve:{check:function(e,t,o,n){return t.user?!!e.hasPermission("add-class"):void o.getLoggedInUser().then(function(t){return!!e.hasPermission("add-class")})}}}).when("/logout",{controller:"LogoutController",template:"<h1>Logging you out</h1>"}),n.setOptions({colours:["#199C7B","#FF8A80"],responsive:!0}),n.setOptions("Line",{datasetFill:!1})}]).run(function(e,t,o,n){e.$on("$routeChangeStart",function(t,r,s){o.user?e.user=o.user:n.getLoggedInUser().then(function(t){o.user=t,e.user=t})})});